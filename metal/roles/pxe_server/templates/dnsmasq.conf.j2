# Only listen on the PXE VLAN interface/IP
interface={{ pxe_interface }}
listen-address={{ pxe_vlan_ip }}
bind-interfaces

# Disable DNS Server.
port=0

{% if dhcp_proxy | bool %}
# ProxyDHCP: main DHCP gives IP, we supply PXE bits (answers on UDP/4011)
dhcp-range={{ pxe_vlan_ip }},proxy

# UEFI x86_64 arch matches (7 and 9 are common)
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9

# Tell UEFI clients the bootfile and the TFTP server IP
dhcp-boot=tag:efi-x86_64,EFI/BOOT/grubx64.efi,,{{ pxe_vlan_ip }}

# Optional PXE menu label (harmless, some stacks display it)
pxe-service=tag:efi-x86_64,X86-64_EFI,"UEFI Network Boot",EFI/BOOT/grubx64.efi

{% else %}
# Regular DHCP mode (not used when router is the DHCP server)
dhcp-range={{ ansible_default_ipv4.network | ansible.netcommon.ipmath(1) }},{{ ansible_default_ipv4.broadcast | ansible.netcommon.ipmath(-1) }},{{ ansible_default_ipv4.netmask }},12h
dhcp-option=3,{{ ansible_default_ipv4.gateway }}

# UEFI x86_64
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9

# Same bootfile in non-proxy mode (server-ip in 3rd field)
dhcp-boot=tag:efi-x86_64,EFI/BOOT/grubx64.efi,,{{ pxe_vlan_ip }}
{% endif %}

# Logs
log-queries
log-dhcp
log-facility=-

# TFTP
enable-tftp
tftp-root=/tftp

