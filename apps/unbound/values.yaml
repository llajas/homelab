containers:
  unbound:
    image:
      repository: ghcr.io/pixelfederation/unbound
      tag: 1.17.1_3
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 20Mi
    serverPort: 53
    config:
      verbosity: 2
      # Note  that  it takes time to print these lines which makes the server (significantly) slower.
      logReplies: "yes"
      # Note  that  it takes time to print these lines which makes the server (significantly) slower.
      logQueries: "yes"
      logTagQueryreply: "yes"
      logLocalActions: "yes"
      logServfail: "yes"
      numThreads: 1
      # for tcp see comment on service, should be enabled
      # udp is enabled by default due to healthz container nslookup checks are udp only
      doTcp: "yes"
      doIp6: "no"
      prefetch: "yes"
      cacheMaxTtl: 3600
      cacheMaxNegativeTtl: 10
      tcpUpstream: "no"
      rootHints:
        enable: true
        dir: "/var/lib/unbound/root.hints"

      # Controls which IP address ranges unbound will allow queries from.
      # If you want to use unbound as an upstream for kube-dns, or allow other pods
      # to query the resolver directly, you'll at least need to allow the
      # clusterIpV4Cidr range.

      allowedIpRanges:
        - "0.0.0.0/0"

      privateAddresses:
        - "192.168.0.0/17"
        - "192.168.1.0/27"
        - "192.168.1.248/29"
        - "192.168.2.0/15"
        - "169.254.0.0/16"
        - "172.16.0.0/12"
        - "10.0.0.8/8"
        - "fd00::/8"
        - "fe80::/10"

      privateDomains:
        - "lajas.tech"

      # You can set as many forward zones as needed by specifying the zone name
      # and forward hosts. Forward hosts can be set by hostname or ip.

      # forwardZones:
      # - name: "fake.net"
      #   forwardHosts:
      #   - "fake1.host.net"
      #   forwardIps:
      #   - "10.10.10.10"

      # Unbound can store DNS records in a "local zone." This facility can be used to
      # assign context-specific names to a given IP address, and could also be used for
      # private DNS if you don't want or have an external resolver.

      # localRecords:
      # - name: "fake3.host.net"
      #   ip: "10.12.10.10"

  healthz:
    image:
      repository: gcr.io/google-containers/exechealthz
      tag: "1.2"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 2m
        memory: 10Mi
  exporter:
    image:
      repository: tombokombo/unbound-exporter
      tag: "latest"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 2m
        memory: 10Mi

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 1

livenessProbe:
  httpGet:
    path: "/healthz"
    port: 8080
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: "/healthz"
    port: 8080
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 3

service:
  type: ClusterIP
  # due to https://ben-lab.github.io/kubernetes-UDP-TCP-bug-same-port/ annoce deployed, ports will never change
  # so it's recomended to enable both, you need udp due to coredns forward healt-checks are udp only
  tcp:
    enabled: true
  udp:
    enabled: true
  labels: {}
  annotations: {}
  topologyKeys: []
#  - kubernetes.io/hostname
#  - topology.kubernetes.io/zone
#  - topology.kubernetes.io/region
#  - '*'

metrics:
  enabled: false

serviceMonitor:
  enabled: false
#  targetLabels: []
#  ## optional scrape interval
#  scrapeInterval: "60s"
#  honorLabels: false
#  metricRelabelings: false


podDisruptionBudget:
  enabled: false
#  maxUnavailable: 1
#  annotations: {}

replicaCount: 3

autoscaling:
  enabled: false
#  minReplicas: 3
#  maxReplicas: 20
#  targetCPUUtilizationPercentage: 75

nodeSelector: {}

tolerations: []

affinity: {}
